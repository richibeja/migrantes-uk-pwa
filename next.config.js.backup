const withPWA = require('@ducanh2912/next-pwa').default({
  dest: 'public',
  disable: false, // Habilitar PWA en desarrollo
  register: true,
  skipWaiting: true,
  runtimeCaching: [
    {
      urlPattern: /^https:\/\/fonts\.googleapis\.com\/.*/i,
      handler: 'CacheFirst',
      options: {
        cacheName: 'google-fonts',
        expiration: {
          maxEntries: 4,
          maxAgeSeconds: 365 * 24 * 60 * 60 // 365 days
        }
      }
    },
    {
      urlPattern: /^https:\/\/fonts\.gstatic\.com\/.*/i,
      handler: 'CacheFirst',
      options: {
        cacheName: 'google-fonts-static',
        expiration: {
          maxEntries: 4,
          maxAgeSeconds: 365 * 24 * 60 * 60 // 365 days
        }
      }
    },
    {
      urlPattern: /\.(?:eot|otf|ttc|ttf|woff|woff2|font.css)$/i,
      handler: 'StaleWhileRevalidate',
      options: {
        cacheName: 'static-font-assets',
        expiration: {
          maxEntries: 4,
          maxAgeSeconds: 7 * 24 * 60 * 60 // 7 days
        }
      }
    },
    {
      urlPattern: /\.(?:jpg|jpeg|gif|png|svg|ico|webp)$/i,
      handler: 'StaleWhileRevalidate',
      options: {
        cacheName: 'static-image-assets',
        expiration: {
          maxEntries: 64,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        }
      }
    },
    {
      urlPattern: /\/_next\/image\?url=.+$/i,
      handler: 'StaleWhileRevalidate',
      options: {
        cacheName: 'next-image',
        expiration: {
          maxEntries: 64,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        }
      }
    },
    {
      urlPattern: /\.(?:mp3|wav|ogg)$/i,
      handler: 'CacheFirst',
      options: {
        rangeRequests: true,
        cacheName: 'static-audio-assets',
        expiration: {
          maxEntries: 32,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        }
      }
    },
    {
      urlPattern: /\.(?:mp4)$/i,
      handler: 'CacheFirst',
      options: {
        rangeRequests: true,
        cacheName: 'static-video-assets',
        expiration: {
          maxEntries: 32,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        }
      }
    },
    {
      urlPattern: /\.(?:js)$/i,
      handler: 'StaleWhileRevalidate',
      options: {
        cacheName: 'static-js-assets',
        expiration: {
          maxEntries: 48,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        }
      }
    },
    {
      urlPattern: /\.(?:css|less)$/i,
      handler: 'StaleWhileRevalidate',
      options: {
        cacheName: 'static-style-assets',
        expiration: {
          maxEntries: 32,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        }
      }
    },
    {
      urlPattern: /^\/$/i,
      handler: 'StaleWhileRevalidate',
      options: {
        cacheName: 'start-url',
        expiration: {
          maxEntries: 32,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        }
      }
    },
    {
      urlPattern: /^\/api\/.*$/i,
      handler: 'NetworkFirst',
      method: 'GET',
      options: {
        cacheName: 'apis',
        expiration: {
          maxEntries: 16,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        },
        networkTimeoutSeconds: 10 // fall back to cache if api does not response within 10 seconds
      }
    },
    {
      urlPattern: /.*/i,
      handler: 'NetworkFirst',
      options: {
        cacheName: 'others',
        expiration: {
          maxEntries: 32,
          maxAgeSeconds: 24 * 60 * 60 // 24 hours
        },
        networkTimeoutSeconds: 10
      }
    }
  ]
});

// @ts-check

/** @type {import('next').NextConfig} */
const nextConfig = {
  /* Configuración básica */
  reactStrictMode: true,
  eslint: { ignoreDuringBuilds: true },
  typescript: { ignoreBuildErrors: true },
  
  /* Configuración de output para Vercel - Reduce tamaño de despliegue */
  output: 'standalone',
  
  /* Configuración de redirecciones y rewrites */
  async redirects() {
    return [
      {
        source: '/',
        destination: '/dashboard',
        permanent: true,
      },
      {
        source: '/home',
        destination: '/dashboard',
        permanent: true,
      },
      {
        source: '/activate-simple',
        destination: '/activate',
        permanent: false,
      },
    ];
  },
  
  async rewrites() {
    return [
      {
        source: '/api/:path*',
        destination: '/api/:path*',
      },
    ];
  },
  
  /* Configuración de imágenes optimizadas para Vercel */
  images: {
    formats: ['image/avif', 'image/webp'],
    domains: ['api.ganafacil.com', 'localhost'],
    unoptimized: process.env.NODE_ENV === 'development' ? true : false,
  },
  
  /* Configuración de tracing para reducir tamaño de bundle */
  outputFileTracingExcludes: {
    '/api/*': ['**/*.test.ts', '**/*.spec.ts', '**/__tests__/**'],
    '/*': ['./src/tests/**', './**/*.test.*'],
  },
  
  outputFileTracingIncludes: {
    '/api/predict': ['src/algorithms/**/*.js', 'src/utils/**/*.js'],
    '/dashboard': ['src/components/**/*.js', 'src/hooks/**/*.js'],
  },
  
  /* Configuración de headers de seguridad */
  async headers() {
    return [
      {
        source: '/(.*)',
        headers: [
          {
            key: 'X-Content-Type-Options',
            value: 'nosniff',
          },
          {
            key: 'X-Frame-Options',
            value: 'DENY',
          },
          {
            key: 'X-XSS-Protection',
            value: '1; mode=block',
          },
        ],
      },
      {
        source: '/service-worker.js',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=0, must-revalidate',
          },
        ],
      },
    ];
  },
  
  /* Configuración de compresión */
  compress: true,
  
  /* Configuración para evitar dependencias nativas problemáticas */
  serverExternalPackages: ['gl', 'canvas', 'sharp'],
  
  /* Configuración de logging en desarrollo */
  logging: {
    fetches: {
      fullUrl: true,
    },
  },
  
  /* Configuración crítica para Vercel - Polyfills para navegador */
  webpack: (config, { isServer }) => {
    if (!isServer) {
      // Polyfills para navegador - eliminar dependencias nativas
      config.resolve.fallback = {
        ...config.resolve.fallback,
        fs: false,
        net: false,
        tls: false,
        canvas: false,
        gl: false,
        'gl': false,
        'node-gyp': false,
        'node-gyp-build': false,
        'prebuild-install': false,
        'sharp': false,
        'bcrypt': false,
        'bcryptjs': false,
        'sqlite3': false,
        'mysql2': false,
        'pg': false,
        'pg-native': false,
        'redis': false,
        'ioredis': false,
        'mongodb': false,
        'mongoose': false,
        'crypto': false,
        'stream': false,
        'util': false,
        'url': false,
        'querystring': false,
        'path': false,
        'os': false,
        'child_process': false,
        'cluster': false,
        'dgram': false,
        'dns': false,
        'http': false,
        'https': false,
        'http2': false,
        'zlib': false,
        'readline': false,
        'repl': false,
        'tty': false,
        'vm': false,
        'worker_threads': false,
        'perf_hooks': false,
        'async_hooks': false,
        'timers': false,
        'events': false,
        'buffer': false,
        'process': false,
        'assert': false,
        'constants': false,
        'domain': false,
        'punycode': false,
        'string_decoder': false,
        'sys': false,
        'tls': false,
        'trace_events': false,
        'tty': false,
        'v8': false,
        'vm': false,
        'worker_threads': false,
        'zlib': false
      };
    }
    return config;
  },
  async redirects() {
    return [
      {
        source: '/activate-simple',
        destination: '/activate',
        permanent: true,
      },
    ];
  },
  async headers() {
    return [
      {
        source: '/sw.js',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=0, must-revalidate',
          },
          {
            key: 'Service-Worker-Allowed',
            value: '/',
          },
        ],
      },
      {
        source: '/manifest.json',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=31536000, immutable',
          },
        ],
      },
      {
        source: '/icons/:path*',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=31536000, immutable',
          },
        ],
      },
      {
        source: '/:path*',
        headers: [
          { key: 'Cache-Control', value: 'no-store, no-cache, must-revalidate' },
        ],
      },
    ];
  },
  async rewrites() {
    return [
      {
        source: '/favicon.ico',
        destination: '/favicon.svg',
      },
      {
        source: '/justicia.png',
        destination: '/justicia.svg',
      },
    ];
  },
};

module.exports = withPWA(nextConfig);
