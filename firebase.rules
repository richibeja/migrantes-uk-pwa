rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthed() { return request.auth != null; }
    function isOwner(uid) { return isAuthed() && request.auth.uid == uid; }
    function userRole() {
      return isAuthed() ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role : null;
    }
    function isAdmin() { return userRole() == 'admin'; }
    function isAdvisor() { return userRole() == 'asesor'; }

    // Perfiles de usuario
    match /users/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow create: if isOwner(uid);
      allow update, delete: if isOwner(uid) || isAdmin();
    }

    // Trámites (cases) con campo uid (dueño)
    match /cases/{caseId} {
      allow read: if isAdmin() ||
                  (isAuthed() && resource.data.uid == request.auth.uid) ||
                  (isAdvisor() && resource.data.assignedTo == request.auth.uid);
      // Crear solo dueño
      allow create: if isAuthed() && request.resource.data.uid == request.auth.uid;
      // Actualizar: dueño puede actualizar cualquier campo EXCEPTO status; admin puede todo
      allow update: if isAdmin() || (
        isAuthed() && resource.data.uid == request.auth.uid && request.resource.data.status == resource.data.status
      ) || (
        // Asesor puede actualizar timeline y attachments del caso asignado, sin cambiar status ni owner
        isAdvisor() && resource.data.assignedTo == request.auth.uid &&
        request.resource.data.status == resource.data.status &&
        request.resource.data.uid == resource.data.uid &&
        // Evitar que el asesor se reasigne o cambie el asignado
        request.resource.data.assignedTo == resource.data.assignedTo
      );
      allow delete: if isAdmin() || (isAuthed() && resource.data.uid == request.auth.uid);
    }

    // Pagos (payments) con campo uid
    match /payments/{paymentId} {
      allow read: if isAdmin() || (isAuthed() && resource.data.uid == request.auth.uid);
      // Crear solo dueño
      allow create: if isAuthed() && request.resource.data.uid == request.auth.uid;
      // Actualizar: solo admin puede validar/actualizar estado
      allow update, delete: if isAdmin();
    }

    // Índices de códigos: solo funciones/admin
    match /indexes/{coll}/{code}/{docId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}


